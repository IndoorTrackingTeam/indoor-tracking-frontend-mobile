// Mocks generated by Mockito 5.4.4 from annotations
// in mobile/test/unit/services/equipament_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mobile/api/equipament_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [EquipamentService].
///
/// See the documentation for Mockito's code generation for more information.
class MockEquipamentService extends _i1.Mock implements _i2.EquipamentService {
  MockEquipamentService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<dynamic>> getEquipaments() => (super.noSuchMethod(
        Invocation.method(
          #getEquipaments,
          [],
        ),
        returnValue: _i3.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i3.Future<List<dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> getOneEquipament(String? register) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOneEquipament,
          [register],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<String> updateEquipamentsLocation() => (super.noSuchMethod(
        Invocation.method(
          #updateEquipamentsLocation,
          [],
        ),
        returnValue: _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #updateEquipamentsLocation,
            [],
          ),
        )),
      ) as _i3.Future<String>);
}
